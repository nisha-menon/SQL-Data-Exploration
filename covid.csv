/*
Covid 19 Data Exploration 
Skills used: Joins, CTE's, Temp Tables, Windows Functions, Aggregate Functions, Creating Views, Converting Data Types
*/

SELECT *
from covid_deaths
Where continent is not null 
order by 3,4

-- Select Data that we are going to be starting with

Select Location, date, total_cases, new_cases, total_deaths, population
From covid_deaths
Where continent is not null 
order by 1,2

-- Total Cases vs Total Deaths
-- Shows likelihood of dying if you contract covid in your country
Select Location, date, total_cases,total_deaths, (total_deaths/total_cases)*100 as DeathPercentage
From covid_deaths
Where location like '%India%'
and continent is not null 
order by 1,2

-- Total Cases vs Population
-- Shows what percentage of population infected with Covid

Select Location, date, Population, total_cases,(total_cases/population)*100 as PercentPopulationInfected
From covid_deaths
--Where location like '%India%'
order by 1,2

-- Countries with Highest Infection Rate compared to Population

Select Location, Population, MAX(total_cases) as HighestInfectionCount,  Max((total_cases/population))*100 as PercentPopulationInfected
From covid_deaths

Group by Location, Population
order by PercentPopulationInfected desc

-- Countries with Highest Death Count per Population

Select Location, MAX(total_deaths) as TotalDeathCount
From covid_deaths
Where continent is not null 
Group by Location
order by TotalDeathCount desc

-- BREAKING THINGS DOWN BY CONTINENT

-- Showing contintents with the highest death count per population

Select continent, MAX(total_deaths) as TotalDeathCount
From covid_deaths
Where continent is not null 
Group by continent
order by TotalDeathCount desc

-- GLOBAL NUMBERS

Select SUM(new_cases) as total_cases, SUM(new_deaths) as total_deaths, SUM(new_deaths)/SUM(New_Cases)*100 as DeathPercentage
From covid_deaths
where continent is not null 
order by 1,2


SELECT *
from covid_vaccinations
----Joining the two tables

Select dea.continent,dea.location,vac.date,vac.new_vaccinations
FROM covid_deaths dea
JOIN covid_vaccinations vac
 ON dea.location = vac.location
 and dea.date=vac.date
where dea.continent is not null and dea.location = 'India'
order by 2,3

 
-- Total Population vs Vaccinations
-- Shows Percentage of Population that has recieved at least one Covid Vaccine

Select dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations
, SUM(vac.new_vaccinations) OVER (Partition by dea.Location Order by dea.location, dea.Date) as RollingPeopleVaccinated
FROM covid_deaths dea
JOIN covid_vaccinations vac
  ON dea.location = vac.location
  AND dea.date=vac.date
where dea.continent is not null 
order by 2,3

-- Using CTE to perform Calculation on Partition By in previous query
With PopVsVac (continent,location,date,population,new_vaccinations , Rollingpeoplevaccinated)
AS 
(
	Select dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations
, SUM(vac.new_vaccinations) OVER (Partition by dea.Location Order by dea.location, dea.Date) as RollingPeopleVaccinated
FROM covid_deaths dea
JOIN covid_vaccinations vac
  ON dea.location = vac.location
  AND dea.date=vac.date
where dea.continent is not null 
)
SELECT *,(Rollingpeoplevaccinated/population)*100 AS percentageofpeoplevaccinated
From PopVsVac

-- Using Temp Table to perform Calculation on Partition By in previous query

DROP Table if exists PercentPopulationVaccinated
Create Table PercentPopulationVaccinated
(
Continent char(255),
Location char(255),
Date date,
Population BIGINT,
New_vaccinations BIGINT,
RollingPeopleVaccinated numeric
);

INSERT INTO PercentPopulationVaccinated 
SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations
, SUM(vac.new_vaccinations) OVER (Partition by dea.Location Order by dea.location, dea.Date) AS RollingPeopleVaccinated 
--, (RollingPeopleVaccinated/population)*100
FROM covid_deaths dea
JOIN covid_vaccinations vac
	On dea.location = vac.location
	and dea.date = vac.date
where dea.continent is not null ;
--order by 2,3
SELECT * ,(RollingPeopleVaccinated/Population)*100 AS percentageofpeoplevaccinated
From PercentPopulationVaccinated

---Creating View to store data for visualizations
Create View PercentPopulationVaccinated as
SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations
, SUM(vac.new_vaccinations) OVER (Partition by dea.Location Order by dea.location, dea.Date) AS RollingPeopleVaccinated 
--, (RollingPeopleVaccinated/population)*100
FROM covid_deaths dea
JOIN covid_vaccinations vac
	On dea.location = vac.location
	and dea.date = vac.date
where dea.continent is not null ;
--order by 2,3

SELECT * 
FROM PercentPopulationVaccinated
